from django.core.management.base import BaseCommand
from brokers.models import Exchange, Tariff

class Command(BaseCommand):
    def handle(self, *args, **kwargs):
        exchanges = [
            {
                "name": "Tinkoff",
                "code": "TINK",
                "api_url": "https://api-invest.tinkoff.ru/openapi",
                "tariffs": [
                    {"name": "–ò–Ω–≤–µ—Å—Ç–æ—Ä", "commission": 0.10},
                    {"name": "–¢—Ä–µ–π–¥–µ—Ä", "commission": 0.05},
                    {"name": "–ü—Ä–µ–º–∏—É–º", "commission": 0.04},
                ]
            },
            {
                "name": "Finam",
                "code": "FINAM",
                "api_url": "https://api.finam.ru",
                "tariffs": [
                    {"name": "–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–π –ø–æ—Ä—Ç—Ñ–µ–ª—å", "commission": 0.28},
                    {"name": "–°—Ç—Ä–∞—Ç–µ–≥", "commission": 0.05},
                    {"name": "–ò–Ω–≤–µ—Å—Ç–æ—Ä", "commission": 0.35},
                    {"name": "–ï–¥–∏–Ω—ã–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω—ã–π", "commission": 0.10},
                ]
            },
        ]   
        for ex_data in exchanges:
            exchange, created = Exchange.objects.get_or_create(
                code=ex_data["code"],
                defaults={
                    "name": ex_data["name"],
                    "api_url": ex_data["api_url"]
                }
            )
            if created:
                    self.stdout.write(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –±–∏—Ä–∂–∞: {exchange.name}")
            elif not created:
                updated = False
                if not exchange.api_url and ex_data["api_url"]:
                    exchange.api_url = ex_data["api_url"]
                    updated = True
                if not exchange.name and ex_data["name"]:
                    exchange.name = ex_data["name"]
                    updated = True
                if updated:
                    exchange.save()
                    self.stdout.write(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∏—Ä–∂–µ: {exchange.name}")

                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤
            for tariff_data in ex_data["tariffs"]:
                    tariff, created_tariff = Tariff.objects.get_or_create(
                        exchange=exchange,
                        name=tariff_data["name"],
                        defaults={"commission": tariff_data["commission"]}
                    )
                    if created_tariff:
                        self.stdout.write(f"  ‚ûï –¢–∞—Ä–∏—Ñ –¥–æ–±–∞–≤–ª–µ–Ω: {tariff.name} ({tariff.commission}%)")
                    else:
                        self.stdout.write(f"  ‚è© –¢–∞—Ä–∏—Ñ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {tariff.name}")

        self.stdout.write(self.style.SUCCESS("üéâ –ó–∞–≥—Ä—É–∑–∫–∞ –±–∏—Ä–∂ –∏ —Ç–∞—Ä–∏—Ñ–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞."))  